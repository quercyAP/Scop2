1. Classe Application
    La classe Application sert de point d'entrée pour votre programme.
    Elle gère l'initialisation de l'environnement de rendu (OpenGL, GLFW),
    la boucle de jeu principale, et le nettoyage à la fin.

    Responsabilités :
        Initialisation et fermeture de l'environnement de rendu.
        Gestion de la boucle de jeu principale.
        Détection des inputs utilisateur et dispatch des actions.

2. Classe ObjLoader
    La classe ObjLoader est responsable de charger et parser les fichiers OBJ.
    Elle stocke les données du modèle dans une structure accessible par les autres composants du programme.

    Responsabilités :
        Charger et parser le fichier .obj.
        Stocker les vertices, les normales, et les coordonnées de texture.
        Fournir un accès aux données de modèle pour le rendu.

3. Classe MaterialManager
    La classe MaterialManager gère les matériaux et les textures des objets dans la scène.

    Responsabilités :
        Charger et parser les fichiers MTL associés aux fichiers OBJ.
        Stocker les matériaux (couleurs, textures, propriétés spéculaires, etc.).
        Fournir un accès aux matériaux pour leur application lors du rendu.

4. Classe ShaderProgram
    Cette classe encapsule la compilation, le liage, et l'utilisation des shaders.
    Elle permet d'abstraire la gestion des shaders OpenGL dans le programme.

    Responsabilités :
        Charger, compiler et lier les shaders vertex et fragment.
        Activer le programme de shader pour le rendu.
        Gérer les uniformes et les attributs des shaders.

5. Classe Camera
    La classe Camera gère la position, l'orientation, et les matrices de projection et 
    de vue pour naviguer dans la scène 3D.

    Responsabilités :
        Calculer et fournir les matrices de vue et de projection.
        Gérer les inputs utilisateur pour déplacer et orienter la caméra.

6. Classe Mesh
    Représente un maillage 3D chargé à partir d'un fichier OBJ. Contient les données de vertex
    nécessaires pour le rendu OpenGL.

    Responsabilités :
        Stocker les vertices, les normales, et les coordonnées de texture du maillage.
        Gérer le rendu du maillage avec OpenGL.

7. Classe Texture
    Encapsule le chargement et l'application des textures.

    Responsabilités :
        Charger les images depuis des fichiers et créer des textures OpenGL.
        Appliquer les textures sur les maillages lors du rendu.

8. Classe Transform
    La classe Transform représente la position, l'orientation, et l'échelle d'un objet dans la scène 3D.

    Responsabilités :
        Stocker et fournir la position, l'orientation, et l'échelle d'un objet.
        Calculer et fournir la matrice de transformation pour le rendu.

9. Classe InputManager
    Gère les entrées utilisateur (clavier, souris) et déclenche des actions dans l'application.

    Responsabilités :
        Détecter les appuis de touches et les mouvements de souris.
        Informer les autres composants (comme Camera) des actions utilisateur.